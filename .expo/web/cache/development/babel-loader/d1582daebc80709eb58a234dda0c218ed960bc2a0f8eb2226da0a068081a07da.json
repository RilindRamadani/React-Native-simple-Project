{"ast":null,"code":"import { useLayoutEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport IconButton from \"../components/IconButton\";\nimport List from \"../components/MealDetail/List\";\nimport Subtitle from \"../components/MealDetail/Subtitle\";\nimport MealDetails from \"../components/MealDetails\";\nimport { MEALS } from \"../data/dummy-data\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nfunction MealDetailScreen(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var mealId = route.params.mealId;\n  var selectedMeal = MEALS.find(function (meal) {\n    return meal.id === mealId;\n  });\n  function headerButtonPressHandler() {\n    console.log(\"Pressed!\");\n  }\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return _jsx(IconButton, {\n          icon: \"star\",\n          color: \"white\",\n          onPress: headerButtonPressHandler\n        });\n      }\n    });\n  }, [navigation, headerButtonPressHandler]);\n  return _jsx(_Fragment, {});\n}\nexport default MealDetailScreen;\nvar styles = StyleSheet.create({\n  rootContainer: {\n    marginBottom: 32\n  },\n  image: {\n    width: \"100%\",\n    height: 350\n  },\n  title: {\n    fontWeight: \"bold\",\n    fontSize: 24,\n    margin: 8,\n    textAlign: \"center\",\n    color: \"white\"\n  },\n  detailText: {\n    color: \"white\"\n  },\n  listOuterContainer: {\n    alignItems: \"center\"\n  },\n  listContainer: {\n    width: \"80%\"\n  }\n});","map":{"version":3,"names":["useLayoutEffect","View","Text","Image","StyleSheet","ScrollView","IconButton","List","Subtitle","MealDetails","MEALS","jsx","_jsx","Fragment","_Fragment","MealDetailScreen","_ref","route","navigation","mealId","params","selectedMeal","find","meal","id","headerButtonPressHandler","console","log","setOptions","headerRight","icon","color","onPress","styles","create","rootContainer","marginBottom","image","width","height","title","fontWeight","fontSize","margin","textAlign","detailText","listOuterContainer","alignItems","listContainer"],"sources":["C:/Users/rilind32/Desktop/Main folder/Projects/React/React native/React native italian pizza/project/screens/MealDetailScreen.js"],"sourcesContent":["import { useLayoutEffect } from \"react\";\nimport { View, Text, Image, StyleSheet, ScrollView } from \"react-native\";\n\nimport IconButton from \"../components/IconButton\";\nimport List from \"../components/MealDetail/List\";\nimport Subtitle from \"../components/MealDetail/Subtitle\";\nimport MealDetails from \"../components/MealDetails\";\nimport { MEALS } from \"../data/dummy-data\";\n\nfunction MealDetailScreen({ route, navigation }) {\n  const mealId = route.params.mealId;\n\n  const selectedMeal = MEALS.find((meal) => meal.id === mealId);\n\n  function headerButtonPressHandler() {\n    console.log(\"Pressed!\");\n    //TODO : add them on a firebase db to favourites\n  }\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: () => {\n        return (\n          <IconButton\n            icon=\"star\"\n            color=\"white\"\n            onPress={headerButtonPressHandler}\n          />\n        );\n      },\n    });\n  }, [navigation, headerButtonPressHandler]);\n\n  return (\n    // <ScrollView style={styles.rootContainer}>\n    //   <Image style={styles.image} source={{ uri: selectedMeal.imageUrl }} />\n    //   <Text style={styles.title}>{selectedMeal.title}</Text>\n    //   <MealDetails\n    //     duration={selectedMeal.duration}\n    //     complexity={selectedMeal.complexity}\n    //     affordability={selectedMeal.affordability}\n    //     textStyle={styles.detailText}\n    //   />\n    //   <View style={styles.listOuterContainer}>\n    //     <View style={styles.listContainer}>\n    //       <Subtitle>Ingredients</Subtitle>\n    //       <List data={selectedMeal.ingredients} />\n    //       <Subtitle>Steps</Subtitle>\n    //       <List data={selectedMeal.steps} />\n    //     </View>\n    //   </View>\n    // </ScrollView>\n    <></>\n  );\n}\n\nexport default MealDetailScreen;\n\nconst styles = StyleSheet.create({\n  rootContainer: {\n    marginBottom: 32,\n  },\n  image: {\n    width: \"100%\",\n    height: 350,\n  },\n  title: {\n    fontWeight: \"bold\",\n    fontSize: 24,\n    margin: 8,\n    textAlign: \"center\",\n    color: \"white\",\n  },\n  detailText: {\n    color: \"white\",\n  },\n  listOuterContainer: {\n    alignItems: \"center\",\n  },\n  listContainer: {\n    width: \"80%\",\n  },\n});\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAGxC,OAAOC,UAAU;AACjB,OAAOC,IAAI;AACX,OAAOC,QAAQ;AACf,OAAOC,WAAW;AAClB,SAASC,KAAK;AAA6B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3C,SAASC,gBAAgBA,CAAAC,IAAA,EAAwB;EAAA,IAArBC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,UAAU,GAAAF,IAAA,CAAVE,UAAU;EAC3C,IAAMC,MAAM,GAAGF,KAAK,CAACG,MAAM,CAACD,MAAM;EAElC,IAAME,YAAY,GAAGX,KAAK,CAACY,IAAI,CAAC,UAACC,IAAI;IAAA,OAAKA,IAAI,CAACC,EAAE,KAAKL,MAAM;EAAA,EAAC;EAE7D,SAASM,wBAAwBA,CAAA,EAAG;IAClCC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;EAEzB;EAEA3B,eAAe,CAAC,YAAM;IACpBkB,UAAU,CAACU,UAAU,CAAC;MACpBC,WAAW,EAAE,SAAAA,YAAA,EAAM;QACjB,OACEjB,IAAA,CAACN,UAAU;UACTwB,IAAI,EAAC,MAAM;UACXC,KAAK,EAAC,OAAO;UACbC,OAAO,EAAEP;QAAyB,EAClC;MAEN;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACP,UAAU,EAAEO,wBAAwB,CAAC,CAAC;EAE1C,OAmBEb,IAAA,CAAAE,SAAA,KAAK;AAET;AAEA,eAAeC,gBAAgB;AAE/B,IAAMkB,MAAM,GAAG7B,UAAU,CAAC8B,MAAM,CAAC;EAC/BC,aAAa,EAAE;IACbC,YAAY,EAAE;EAChB,CAAC;EACDC,KAAK,EAAE;IACLC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE;EACV,CAAC;EACDC,KAAK,EAAE;IACLC,UAAU,EAAE,MAAM;IAClBC,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE,CAAC;IACTC,SAAS,EAAE,QAAQ;IACnBb,KAAK,EAAE;EACT,CAAC;EACDc,UAAU,EAAE;IACVd,KAAK,EAAE;EACT,CAAC;EACDe,kBAAkB,EAAE;IAClBC,UAAU,EAAE;EACd,CAAC;EACDC,aAAa,EAAE;IACbV,KAAK,EAAE;EACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}